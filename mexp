#!/usr/bin/env perl

use open ":std", ":encoding(UTF-8)";
use utf8;
use strict;
use warnings;
use v5.32;

my $outdir = $ENV{'OUTDIR'};
die 'Set $OUTDIR' unless defined $outdir;
mkdir $outdir;

my $hdr = do {
	local $/ = undef;
	open my $fh, "<", "head.html"
	    or die "can't open head.html: $!";
	<$fh>;
};

my $foot = do {
	local $/ = undef;
	open my $fh, "<", "foot.html"
	    or die "can't open foot.html: $!";
	<$fh>;
};

my $logo = <<EOF;
<img srcset='/got-tiny.png, /got-tiny@2x.png 2x'
     src='/got-tiny.png'
     alt='"GOT", but the "O" is a cute, smiling sun' />
EOF

sub san {
	my $str = shift;
	$str =~ s/&/\&amp;/g;
	$str =~ s/</\&lt;/g;
	$str =~ s/>/\&gt;/g;
	return $str;
}

my $tid;
while (<>) {
	chomp;
	say; # continue the pipeline

	m/^([^ ]+) <([^>]+)> (.+)(\d{4}-\d{2}-\d{2} \d{2}:\d{2}) <([^>]+)> (.*)/;
	die "can't parse: $_" unless defined $1;
	my ($fname, $mid, $indent, $date, $from, $subj) = ($1, $2, $3, $4, $5, $6);
	$subj = san($subj);
	$subj =~ s/\s+/ /g;
	$subj =~ s/\s+$//;

	$mid =~ s,_,__,g;
	$mid =~ s,/,_,g;

	chomp($mid);

	next if -f "$outdir/$mid.html";

	my $level = length($indent) - 1;
	$level = 10 if $indent =~ m/\.\.\d{2}\.\./;

	$tid = $mid if $level == 0;

	my $dest = "$outdir/$mid.html";
	open(my $fh, '>', "$dest") or die "can't open $dest: $!";

	say $fh $hdr =~ s/TITLE/$subj/r;

	open(my $mshow, "-|", "mshow", "-nNA", "text/plain", $fname)
	    or die "can't exec mshow: $!";

	print $fh "<header class='mail-header'>";
	print $fh "<p>";
	print $fh $logo;
	print $fh "<a href='/'>← Back to the index</a>";
	print $fh " or ";
	print $fh "<a href='/thread/$tid.html#$mid'>→ go to the thread</a>.";
	print $fh "</p>";
	print $fh "<dl>";
	while (<$mshow>) {
		chomp;
		last if /^$/;
		my ($h, $v) = m/^([-A-Za-z]+): (.*)/;
		die "bogus line? $fname : $_" unless (defined $h and defined $v);

		# drop the (1 day ago) string
		$v =~ s/\(.*\)//g if ($h eq "Date");

		print $fh "<dt>", san($h), ":</dt>";
		print $fh "<dd>", san($v), "</dd>";
	}
	print $fh "</dl></header>";

	my $body = do {
		local $/ = undef;
		<$mshow>;
	};

	print $fh "<pre>";
	# print $fh san($_) while <>;
	print $fh san($body // "");
	print $fh "</pre>";

	print $fh $foot;

	close($mshow);
	close($fh);

	# exit(0);
}
